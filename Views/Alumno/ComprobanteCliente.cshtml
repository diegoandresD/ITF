
@{
    Layout = null;
    ViewBag.Title = "ComprobanteCliente";
}

<link href="//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css" rel="stylesheet" id="bootstrap-css">
<script src="//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js"></script>
<script src="//code.jquery.com/jquery-1.11.1.min.js"></script>

<div class="container" style="margin-top:3%">
    <div class="row">
        <div class="well col-xs-12 col-sm-12 col-md-12 col-xs-offset-1 col-sm-offset-1 col-md-offset-3">

            <div class="row">
                <div class="text-center">
                    <h1 class="text-success">Comprobante</h1>
                </div>
                <div class="table-responsive">
                    <table class="table">
                        <tbody>
                            <tr>
                                <th style="width:50%">Número de tarjeta</th>
                                <th><font id="CARD_NUMBER"></font></th>
                            </tr>
                            <tr>
                                <th>Orden de Compra</th>
                                <th><font id="BUY_ORDEN"></font></th>
                            </tr>
                            <tr>
                                <th>Código de Autorización</th>
                                <th>
                                    <font id="AUTHORIZATION_CODE"></font>
                                </th>
                            </tr>
                            <tr>
                                <th>Tipo de venta</th>
                                <th><font id="PAYMENT_TYPE_CODE"></font></th>
                            </tr>
                            <tr>
                                <th>
                                    Fecha
                                </th>
                                <th><font id="TRANSACTION_DATE"></font></th>
                            </tr>
                            <tr>
                                <th>
                                    Total
                                </th>
                                <th><font id="TOTAL"></font></th>
                            </tr>
                        </tbody>
                    </table>
                </div>

                <div class="row col-lg-12">
                    <div class="col-5">
                        <h3 class="text-success">
                            Gracias por tu Orden.
                        </h3>
                        <img src="~/img/img-77.jpg" alt="allytees-500-trans.png" width="180" height="80">

                    </div>
                    <div class="col-5 text-right">
                        <img src="https://www.clipartmax.com/png/middle/157-1578604_exitopago-aguas-andinas-logo-de-pagado-png.png" alt="allytees-500-trans.png" width="200" height="100">

                    </div>
                </div>

                <div class="row col-lg-12">
                    <div class="col-5">
                        <button role="button" id="ButtonVolver" class="btn btn-success">Volver </button>


                    </div>
                </div>


            </div>
        </div>
    </div>
    <script src="~/plugins/moment.js"></script>
   <script>
       var bouncejsShow = function (promise) {
           var n = this;
           new Bounce()
               .translate({
                   from: { x: 450, y: 0 }, to: { x: 0, y: 0 },
                   easing: 'bounce',
                   duration: 1000,
                   bounces: 4,
                   stiffness: 3
               })
               .scale({
                   from: { x: 1.2, y: 1 }, to: { x: 1, y: 1 },
                   easing: 'bounce',
                   duration: 1000,
                   delay: 100,
                   bounces: 4,
                   stiffness: 1
               })
               .scale({
                   from: { x: 1, y: 1.2 }, to: { x: 1, y: 1 },
                   easing: 'bounce',
                   duration: 1000,
                   delay: 100,
                   bounces: 6,
                   stiffness: 1
               })
               .applyTo(n.barDom, {
                   onComplete: function () {
                       promise(function (resolve) {
                           resolve();
                       });
                   }
               });
       };
       var bouncejsClose = function (promise) {
           var n = this;
           new Bounce()
               .translate({
                   from: { x: 0, y: 0 }, to: { x: 450, y: 0 },
                   easing: 'bounce',
                   duration: 500,
                   bounces: 4,
                   stiffness: 1
               })
               .applyTo(n.barDom, {
                   onComplete: function () {
                       promise(function (resolve) {
                           resolve();
                       });
                   }
               });
       };

       function Fetch(Ruta, Data) {
           let _Ruta = Ruta;
           let _Datos = Data;

           const FetchWithData = () => {
               return new Promise(Resolve => {
                   return Resolve(
                       fetch(_Ruta, {
                           method: 'POST',
                           body: JSON.stringify(_Datos),
                           headers: {
                               'Content-Type': 'application/json'
                           }
                       }).then(res => res.json())
                           .then(response => response)
                   );
               });
           };

           const FetchWithOutData = () => {
               return new Promise(Resolve => {
                   return Resolve(
                       fetch(_Ruta, {
                           method: 'POST',
                           headers: {
                               'Content-Type': 'application/json'
                           }
                       }).then(res => res.json())
                           .then(response => response)
                   );
               });
           };

           return {
               FetchWithData: FetchWithData,
               FetchWithOutData: FetchWithOutData
           };
       }

       window.addEventListener('load', async () => {

           document.getElementById('CARD_NUMBER').innerText = "************" + localStorage.getItem('authorizationCode');
           document.getElementById('BUY_ORDEN').innerText = localStorage.getItem('BUY_ORDEN');
           document.getElementById('AUTHORIZATION_CODE').innerText = localStorage.getItem('authorizationCode');
           document.getElementById('PAYMENT_TYPE_CODE').innerText = localStorage.getItem('authorizationCode');
           document.getElementById('TRANSACTION_DATE').innerText = localStorage.getItem('authorizationCode');
           document.getElementById('TOTAL').innerText = "$" + localStorage.getItem('amount');
           
       });

       document.getElementById('ButtonVolver').addEventListener('click', async () =>{
           await Back();
       })

       function addCommas(nStr) {
           nStr += '';
           var x = nStr.split('.');
           var x1 = x[0];
           var x2 = x.length > 1 ? '.' + x[1] : '';
           var rgx = /(\d+)(\d{3})/;
           while (rgx.test(x1)) {
               x1 = x1.replace(rgx, '$1' + '.' + '$2');
           }
           return x1 + x2;
       }

       const Back = async () => {
           let id = localStorage.getItem('ID');
           let url = "../Alumno/AutoLogin";
           let data = { ID: id };
           const Fetchs = Fetch(url, data);
           const Resultado = await Fetchs.FetchWithData();
           if (Resultado.RESPUESTA) {
               location.href = "../Alumno/Ahorros";
           }

       };
   </script>

